name: Build and Test Game
on: [ workflow_call ]  # allow this workflow to be called from other workflows

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.3.1f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          # - Android # Build an Android player.
          # - WebGL # WebGL.
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      
      # Cache Library/ folder, should speed up build times by about 50%
      - name: Retrieve cached library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}
            Library-
      
      # Run Play Mode and Edit Mode tests
      - name: Run play mode and edit mode tests
        uses: game-ci/unity-test-runner@v2
        with:
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      
      # Upload Test Results
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      
      # Build the actual game
      - name: Build the actual game
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: ${{ github.event.repository.name }}
          versioning: None
          # To fix the Warning: Could not parse "none" to semver, defaulting android version code to 1 warning
          androidVersionCode: 1
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      
      # Upload the generated build
      - name: Upload generated build
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}